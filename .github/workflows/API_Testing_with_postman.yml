name: Automated API tests using Postman CLI and Newman

on: push

jobs:
  automated-api-tests:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository to get access to the files
      - uses: actions/checkout@v4

      # Install Postman CLI
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      # Log in to Postman CLI using the API key stored in GitHub secrets
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # Install Node.js to enable Newman
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      # Install Newman and the HTML Extra Reporter for more detailed test reports
      - name: Install newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      # Create a directory to store test results
      - name: Make Directory for results
        run: mkdir -p testResults

      # Run the Postman collection using Postman CLI for each data file in DataFiles folder
      - name: Run API tests with Postman CLI on each data file
        run: |
          for file in DataFiles/*.json; do
            echo "Running tests with data file: $file"
            postman collection run "31937813-2dba78e8-4f0d-43f7-a499-ebe90a11c683" \
              --iteration-count 3 \
              --iteration-data "$file"
          done

      # Run the Postman collection using Newman for more detailed reporting
      - name: Run POSTMAN collection with Newman
        run: |
          newman run "31937813-2dba78e8-4f0d-43f7-a499-ebe90a11c683" -r htmlextra \
            --reporter-htmlextra-export testResults/htmlreport.html \
            --reporter-htmlextra-darkTheme

      # Upload the test results for download and inspection
      - name: Output the run details
        uses: actions/upload-artifact@v2
        with:
          name: RunReports
          path: testResults
